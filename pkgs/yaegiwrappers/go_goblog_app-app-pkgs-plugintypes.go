// Code generated by 'yaegi extract go.goblog.app/app/pkgs/plugintypes'. DO NOT EDIT.

// MIT License
//
// Copyright (c) 2020 - 2023 Jan-Lukas Else
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

package yaegiwrappers

import (
	"context"
	"database/sql"
	"go.goblog.app/app/pkgs/plugintypes"
	"io"
	"net/http"
	"reflect"
)

func init() {
	Symbols["go.goblog.app/app/pkgs/plugintypes/plugintypes"] = map[string]reflect.Value{
		// type definitions
		"App":           reflect.ValueOf((*plugintypes.App)(nil)),
		"Database":      reflect.ValueOf((*plugintypes.Database)(nil)),
		"Exec":          reflect.ValueOf((*plugintypes.Exec)(nil)),
		"Middleware":    reflect.ValueOf((*plugintypes.Middleware)(nil)),
		"Post":          reflect.ValueOf((*plugintypes.Post)(nil)),
		"RenderContext": reflect.ValueOf((*plugintypes.RenderContext)(nil)),
		"SetApp":        reflect.ValueOf((*plugintypes.SetApp)(nil)),
		"SetConfig":     reflect.ValueOf((*plugintypes.SetConfig)(nil)),
		"UI":            reflect.ValueOf((*plugintypes.UI)(nil)),

		// interface wrapper definitions
		"_App":           reflect.ValueOf((*_go_goblog_app_app_pkgs_plugintypes_App)(nil)),
		"_Database":      reflect.ValueOf((*_go_goblog_app_app_pkgs_plugintypes_Database)(nil)),
		"_Exec":          reflect.ValueOf((*_go_goblog_app_app_pkgs_plugintypes_Exec)(nil)),
		"_Middleware":    reflect.ValueOf((*_go_goblog_app_app_pkgs_plugintypes_Middleware)(nil)),
		"_Post":          reflect.ValueOf((*_go_goblog_app_app_pkgs_plugintypes_Post)(nil)),
		"_RenderContext": reflect.ValueOf((*_go_goblog_app_app_pkgs_plugintypes_RenderContext)(nil)),
		"_SetApp":        reflect.ValueOf((*_go_goblog_app_app_pkgs_plugintypes_SetApp)(nil)),
		"_SetConfig":     reflect.ValueOf((*_go_goblog_app_app_pkgs_plugintypes_SetConfig)(nil)),
		"_UI":            reflect.ValueOf((*_go_goblog_app_app_pkgs_plugintypes_UI)(nil)),
	}
}

// _go_goblog_app_app_pkgs_plugintypes_App is an interface wrapper for App type
type _go_goblog_app_app_pkgs_plugintypes_App struct {
	IValue       interface{}
	WGetDatabase func() plugintypes.Database
	WGetPost     func(path string) (plugintypes.Post, error)
}

func (W _go_goblog_app_app_pkgs_plugintypes_App) GetDatabase() plugintypes.Database {
	return W.WGetDatabase()
}
func (W _go_goblog_app_app_pkgs_plugintypes_App) GetPost(path string) (plugintypes.Post, error) {
	return W.WGetPost(path)
}

// _go_goblog_app_app_pkgs_plugintypes_Database is an interface wrapper for Database type
type _go_goblog_app_app_pkgs_plugintypes_Database struct {
	IValue           interface{}
	WExec            func(a0 string, a1 ...any) (sql.Result, error)
	WExecContext     func(a0 context.Context, a1 string, a2 ...any) (sql.Result, error)
	WQuery           func(a0 string, a1 ...any) (*sql.Rows, error)
	WQueryContext    func(a0 context.Context, a1 string, a2 ...any) (*sql.Rows, error)
	WQueryRow        func(a0 string, a1 ...any) (*sql.Row, error)
	WQueryRowContext func(a0 context.Context, a1 string, a2 ...any) (*sql.Row, error)
}

func (W _go_goblog_app_app_pkgs_plugintypes_Database) Exec(a0 string, a1 ...any) (sql.Result, error) {
	return W.WExec(a0, a1...)
}
func (W _go_goblog_app_app_pkgs_plugintypes_Database) ExecContext(a0 context.Context, a1 string, a2 ...any) (sql.Result, error) {
	return W.WExecContext(a0, a1, a2...)
}
func (W _go_goblog_app_app_pkgs_plugintypes_Database) Query(a0 string, a1 ...any) (*sql.Rows, error) {
	return W.WQuery(a0, a1...)
}
func (W _go_goblog_app_app_pkgs_plugintypes_Database) QueryContext(a0 context.Context, a1 string, a2 ...any) (*sql.Rows, error) {
	return W.WQueryContext(a0, a1, a2...)
}
func (W _go_goblog_app_app_pkgs_plugintypes_Database) QueryRow(a0 string, a1 ...any) (*sql.Row, error) {
	return W.WQueryRow(a0, a1...)
}
func (W _go_goblog_app_app_pkgs_plugintypes_Database) QueryRowContext(a0 context.Context, a1 string, a2 ...any) (*sql.Row, error) {
	return W.WQueryRowContext(a0, a1, a2...)
}

// _go_goblog_app_app_pkgs_plugintypes_Exec is an interface wrapper for Exec type
type _go_goblog_app_app_pkgs_plugintypes_Exec struct {
	IValue interface{}
	WExec  func()
}

func (W _go_goblog_app_app_pkgs_plugintypes_Exec) Exec() {
	W.WExec()
}

// _go_goblog_app_app_pkgs_plugintypes_Middleware is an interface wrapper for Middleware type
type _go_goblog_app_app_pkgs_plugintypes_Middleware struct {
	IValue   interface{}
	WHandler func(next http.Handler) http.Handler
	WPrio    func() int
}

func (W _go_goblog_app_app_pkgs_plugintypes_Middleware) Handler(next http.Handler) http.Handler {
	return W.WHandler(next)
}
func (W _go_goblog_app_app_pkgs_plugintypes_Middleware) Prio() int {
	return W.WPrio()
}

// _go_goblog_app_app_pkgs_plugintypes_Post is an interface wrapper for Post type
type _go_goblog_app_app_pkgs_plugintypes_Post struct {
	IValue         interface{}
	WGetParameters func() map[string][]string
	WGetPath       func() string
	WGetPublished  func() string
	WGetSection    func() string
	WGetUpdated    func() string
}

func (W _go_goblog_app_app_pkgs_plugintypes_Post) GetParameters() map[string][]string {
	return W.WGetParameters()
}
func (W _go_goblog_app_app_pkgs_plugintypes_Post) GetPath() string {
	return W.WGetPath()
}
func (W _go_goblog_app_app_pkgs_plugintypes_Post) GetPublished() string {
	return W.WGetPublished()
}
func (W _go_goblog_app_app_pkgs_plugintypes_Post) GetSection() string {
	return W.WGetSection()
}
func (W _go_goblog_app_app_pkgs_plugintypes_Post) GetUpdated() string {
	return W.WGetUpdated()
}

// _go_goblog_app_app_pkgs_plugintypes_RenderContext is an interface wrapper for RenderContext type
type _go_goblog_app_app_pkgs_plugintypes_RenderContext struct {
	IValue   interface{}
	WGetBlog func() string
	WGetPath func() string
}

func (W _go_goblog_app_app_pkgs_plugintypes_RenderContext) GetBlog() string {
	return W.WGetBlog()
}
func (W _go_goblog_app_app_pkgs_plugintypes_RenderContext) GetPath() string {
	return W.WGetPath()
}

// _go_goblog_app_app_pkgs_plugintypes_SetApp is an interface wrapper for SetApp type
type _go_goblog_app_app_pkgs_plugintypes_SetApp struct {
	IValue  interface{}
	WSetApp func(app plugintypes.App)
}

func (W _go_goblog_app_app_pkgs_plugintypes_SetApp) SetApp(app plugintypes.App) {
	W.WSetApp(app)
}

// _go_goblog_app_app_pkgs_plugintypes_SetConfig is an interface wrapper for SetConfig type
type _go_goblog_app_app_pkgs_plugintypes_SetConfig struct {
	IValue     interface{}
	WSetConfig func(config map[string]any)
}

func (W _go_goblog_app_app_pkgs_plugintypes_SetConfig) SetConfig(config map[string]any) {
	W.WSetConfig(config)
}

// _go_goblog_app_app_pkgs_plugintypes_UI is an interface wrapper for UI type
type _go_goblog_app_app_pkgs_plugintypes_UI struct {
	IValue  interface{}
	WRender func(renderContext plugintypes.RenderContext, rendered io.Reader, modified io.Writer)
}

func (W _go_goblog_app_app_pkgs_plugintypes_UI) Render(renderContext plugintypes.RenderContext, rendered io.Reader, modified io.Writer) {
	W.WRender(renderContext, rendered, modified)
}
